// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    DMux8Way(
      in=load,
      sel=address,
      a=loadA,
      b=loadB,
      c=loadC,
      d=loadD,
      e=loadE,
      f=loadF,
      g=loadG,
      h=loadH);

    Register(in=in, load=loadA, out=regAout); //000
    Register(in=in, load=loadB, out=regBout); //001
    Register(in=in, load=loadC, out=regCout); //010
    Register(in=in, load=loadD, out=regDout); //011
    Register(in=in, load=loadE, out=regEout); //100
    Register(in=in, load=loadF, out=regFout); //101
    Register(in=in, load=loadG, out=regGout); //110
    Register(in=in, load=loadH, out=regHout); //111

    Mux8Way16(
      a=regAout,
      b=regBout,
      c=regCout,
      d=regDout,
      e=regEout,
      f=regFout,
      g=regGout,
      h=regHout,
      sel=address,
      out=out);
}
